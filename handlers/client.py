import logging

from aiogram import types
from aiogram.dispatcher.filters import Text

from bot import dp
from database import db_functions
from handlers.keyboards import keyboard, inline_keybords
from handlers.models.categories_deletion_model import CategoriesAddingForm
from handlers.models.income_spend_model import IncomeSpendForm
from handlers.models.report_model import ReportForm
from handlers.models.settings_model import SettingsForm
from helpers import information
from texts.ru_RU import messages


@dp.message_handler(commands=['start'], state='*')
async def start(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª–Ω—è—é—â–∞—è—Å—è –ø—Ä–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    try:
        logging.debug(f"/start. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")
        await db_functions.initialize_user(str(message.from_user.id))
        await message.answer(messages.start_message, parse_mode="MarkdownV2", reply_markup=keyboard.main_menu)
        await IncomeSpendForm.value.set()
    except Exception as e:
        logging.error(f"{start.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(Text(equals='üìä –û—Ç—á—ë—Ç—ã –∏ —ç–∫—Å–ø–æ—Ä—Ç'), state=IncomeSpendForm.value)
async def on_report(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∏–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    try:
        await db_functions.execute_events(str(message.from_user.id))
        await message.delete()
        await ReportForm.start.set()
        await message.answer(
            "*–û—Ç—á—ë—Ç—ã –∏ —ç–∫—Å–ø–æ—Ä—Ç\!* üìä\n\n–ó–¥–µ—Å—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å *–∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç* –∑–∞ –º–µ—Å—è—Ü –≤ —á–∞—Ç –∏–ª–∏"
            " *–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç* –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ *\.xlsx*\.\n"
            "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —ç–∫—Å–ø–æ—Ä—Ç, –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—Å–ª–∞–Ω —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ *\.csv*\!\n", parse_mode="MarkdownV2",
            reply_markup=inline_keybords.report_inline)
    except Exception as e:
        logging.error(f"{on_report.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(Text(equals='‚ÑπÔ∏è –ë—é–¥–∂–µ—Ç'), state=IncomeSpendForm.value)
async def on_info(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é –±—é–¥–∂–µ—Ç–∞.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        await db_functions.execute_events(str(message.from_user.id))
        await message.delete()
        await message.answer(f"*‚ÑπÔ∏è –ë—é–¥–∂–µ—Ç*\n\n–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –±—é–¥–∂–µ—Ç–∞\.\n\n"
                             f"{await information.get_budget_of_user(str(message.from_user.id))}",
                             parse_mode="MarkdownV2")
    except Exception as e:
        logging.error(f"{on_info.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(Text(equals='üõ† –ö–∞—Ç–µ–≥–æ—Ä–∏–∏'), state=IncomeSpendForm.value)
async def on_incomes_spends(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å —Ç—Ä–∞—Ç–∞–º–∏ –∏ –¥–æ—Ö–æ–¥–∞–º–∏.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        await db_functions.execute_events(str(message.from_user.id))
        await message.delete()
        await CategoriesAddingForm.start.set()
        await message.answer(
            "*–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —É–¥–∞–ª–µ–Ω–∏–µ\!* üìà\n\n–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ *–¥–æ–±–∞–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å* –∫–∞—Ç–µ–≥–æ—Ä–∏–∏/–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏\.\n"
            "–ê —Ç–∞–∫–∂–µ *—É–¥–∞–ª–∏—Ç—å* –¥–æ—Ö–æ–¥—ã/—Ç—Ä–∞—Ç—ã\!", parse_mode="MarkdownV2",
            reply_markup=inline_keybords.income_spend_category_inline)
    except Exception as e:
        logging.error(f"{on_incomes_spends.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(Text(equals='üìù –¢—Ä–∞—Ç—ã –∏ –¥–æ—Ö–æ–¥—ã'), state=IncomeSpendForm.value)
async def on_incomes_spends(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å —Ç—Ä–∞—Ç–∞–º–∏ –∏ –¥–æ—Ö–æ–¥–∞–º–∏.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        await db_functions.execute_events(str(message.from_user.id))
        await message.delete()
        await message.answer(
            "*–¢—Ä–∞—Ç—ã –∏ –¥–æ—Ö–æ–¥—ã\!* üìù\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É, –ø—Ä–æ—Å—Ç–æ –æ–ø—Ä–∞–≤—å—Ç–µ *—á–∏—Å–ª–æ* –∏–ª–∏ *—Ñ–æ—Ç–æ —á–µ–∫–∞* –≤ —á–∞—Ç\!\n"
            "–ü—Ä–∏–º–µ—Ä: *123* –∏–ª–∏ *123\.32*\n\n–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ \- –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∫–∞\.", parse_mode="MarkdownV2")
    except Exception as e:
        logging.error(f"{on_incomes_spends.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(Text(equals='‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'), state=IncomeSpendForm.value)
async def on_settings(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        await db_functions.execute_events(str(message.from_user.id))
        await message.delete()
        await SettingsForm.start.set()
        await message.answer(
            "*–ù–∞—Å—Ç—Ä–æ–π–∫–∏\!* ‚öôÔ∏è\n\n–¢—É—Ç –≤—ã —Å–º–æ–∂–µ—Ç–µ *—Å–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É*, –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ *–æ—Å—Ç–∞—Ç–æ–∫ –ø–æ —Å—Ä–µ–¥—Å—Ç–≤–∞–º* —Å –ø—Ä–æ—à–ª–æ–≥–æ –º–µ—Å—è—Ü–∞\.\n"
            "–î–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å *—Å–æ–±—ã—Ç–∏—è* —Ç—Ä–∞—Ç –∏–ª–∏ –¥–æ—Ö–æ–¥–æ–≤\, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –≤ –∑–∞–¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å\!\n"
            "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å *—Ü–µ–ª—å* –ø–æ —Å—ç–∫–æ–Ω–æ–º–ª–µ–Ω–Ω—ã–º —Å—Ä–µ–¥—Å—Ç–≤–∞–º –∏ *–ª–∏–º–∏—Ç* –ø–æ —Ç—Ä–∞—Ç–∞–º –∑–∞ –º–µ—Å—è—Ü\!\n", parse_mode="MarkdownV2",
            reply_markup=inline_keybords.settings_inline)
    except Exception as e:
        logging.error(f"{on_settings.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(Text(equals='üÜò –ü–æ–º–æ—â—å'), state=IncomeSpendForm.value)
async def on_help(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–∞–±–æ—Ç–µ.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        await db_functions.execute_events(str(message.from_user.id))
        await message.delete()
        await message.answer(messages.help_message, parse_mode="MarkdownV2")
    except Exception as e:
        logging.error(f"{on_help.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(content_types=['document', 'photo'], state=IncomeSpendForm.value)
async def on_files(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –∑–∞–ø—É—Å–∫ –¥–µ–π—Å—Ç–≤–∏–π —Å —Ñ–æ—Ç–æ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        if message.document:
            await db_functions.execute_events(str(message.from_user.id))
            logging.debug(f"–ü–æ–ª—É—á–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç {message.document.file_name}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")
            await message.answer("*–ü—Ä–∏—Å—Ç—É–ø–∞—é –∫ –∏–º–ø–æ—Ä—Ç—É\.\.\.*", parse_mode="MarkdownV2")
        if message.photo:
            await db_functions.execute_events(str(message.from_user.id))
            logging.debug(f"–ü–æ–ª—É—á–∏–ª —Ñ–æ—Ç–æ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")
            await message.answer("*–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR\.\.\.*", parse_mode="MarkdownV2")
    except Exception as e:
        logging.error(f"{on_files.__name__}: {e}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")


@dp.message_handler(content_types=["audio", "sticker", "video", "video_note", "voice", "location", "contact"],
                    state=IncomeSpendForm.value)
async def on_all_not_command_message(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –Ω–µ–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π —Ç–∏–ø –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
    :param message: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    logging.debug(f"–ü–æ–ª—É—á–∏–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {message.from_user.id}.")
    await message.answer(text=messages.not_in_bot_message, parse_mode="MarkdownV2")


def register_client() -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.
    """
    dp.register_message_handler(start, commands=['start'])
